Run-time helpers:

  Loop(summarization, i=rng) =
    summary := Init(summarization);
    for iv=rng do Accum(i, iv, summarization, summary) end do;
    return summary

  Init(Par(s1, s2))       = [Init(s1), Init(s2)]
  Init(Index(n, o, e, s)) = [seq(Init(s), o=0..n-1)]
  Init(If(cond, s1, s2))  = [Init(s1), Init(s2)]
  Init(Unit())            = []
  Init(Add(e))            = 0

  Accum(i, iv, Par(s1, s2), summary) =
    Accum(i, iv, s1, summary[1]);
    Accum(i, iv, s2, summary[2]);
  Accum(i, iv, Index(n, o, e, s), summary) =
    ov := eval(e, i=iv);
    if o::nonnegint and o<n then Accum(i, iv, s, summary[ov+1]) end if;
  Accum(i, iv, If(cond, s1, s2), summary) =
    if eval(cond, i=iv) then Accum(i, iv, s1, summary[1])
                        else Accum(i, iv, s2, summary[2]) end if;
  Accum(i, iv, Unit(),           summary) = ;
  Accum(i, iv, Add(e),           summary) = summary += eval(e, i=iv);

Specification:

  If [s, f] = summarize(e, kb, i)
  then f(Loop(s, i=rng)) = sum(e, i=rng)
  and we try to make s depend on as little as possible

Implementation:

  summarize(C[piecewise(cond,a,b)], kb, i) =
    [Par(s1, s2),
     [summary1, summary2] -> piecewise(cond, f1(summary1), f2(summary2))]
    where [s1, f1] = summarize(C[a], kb, i)
          [s2, f2] = summarize(C[b], kb, i)
    if not depends(cond, i)
  summarize(piecewise(o=e,a,0), kb, i) =
    [Index(n, o, e, s),
     summary -> piecewise(o::nonnegint and o<n, f(summary[o+1]), 0)]
    where [s, f] = summarize(a, kb, i)
    if kb entails o::nonnegint and o<n
  summarize(C[piecewise(cond,a,b)], kb, i) =
    [If(cond, s1, s2), summary -> f1(summary[1]) + f2(summary[2])]
    where [s1, f1] = summarize(C[a], kb, i)
          [s2, f2] = summarize(C[b], kb, i)
  summarize(0, kb, i) = [Unit(), summary -> 0]
  summarize(e, kb, i) = [Add(e), summary -> summary]

Example:

  summarize(piecewise(_b=piecewise(i=docUpdate,zNew,z[i]),t[i],0), kb, i)
  = [If(i=docUpdate, Par(Add(t[i]), Unit()),
                     Index(size(as), _b, z[i], Add(t[i]))),
     summary -> piecewise(_b=zNew, summary[1], 0) + summary[_b]]
      summarize(piecewise(_b=zNew,t[i],0), kb, i)
      = [Par(Add(t[i]), Unit()), summary -> piecewise(_b=zNew, summary[1], 0)]
      summarize(piecewise(_b=z[i],t[i],0), kb, i)
      = [Index(size(as), _b, z[i], Add(t[i])), summary -> summary[_b]]
          summarize(t[i], kb, i)
          = [Add(t[i]), summary -> summary]
