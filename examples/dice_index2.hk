def dirichlet(as array(prob)):
    xs <~ plate i of int2nat(size(as)-1):
            beta(summate j from i+1 to size(as): as[j],
                 as[i])
    return array i of size(as):
             x = product j from 0 to i: xs[j]
             x * if i+1==size(as): 1 else: real2prob(1-xs[i])

fn t array(array(nat)):
    plate k of size(t):
      ps <~ dirichlet(array i of size(t[k]): 1.0)
      _ <~ plate i of size(t[k]):
             observe t[k][i] <~ categorical(ps)
      return ps
